<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (C) 2006 The Android Open Source Project
 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at
      http://www.apache.org/licenses/LICENSE-2.0
 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->
<resources>
  <!-- If set, specifies the color to apply to the drawable as a tint. By default,
            no tint is applied. May be a color state list. -->
  <attr name="mv_tint" format="color" />
  <!-- When a tint color is set, specifies its Porter-Duff blending mode. The
       default value is src_in, which treats the drawable as an alpha mask. -->
  <attr name="mv_tintMode">
    <!-- The tint is drawn on top of the drawable.
         [Sa + (1 - Sa)*Da, Rc = Sc + (1 - Sa)*Dc] -->
    <enum name="mv_src_over" value="3" />
    <!-- The tint is masked by the alpha channel of the drawable. The drawable’s
         color channels are thrown out. [Sa * Da, Sc * Da] -->
    <enum name="mv_src_in" value="5" />
    <!-- The tint is drawn above the drawable, but with the drawable’s alpha
         channel masking the result. [Da, Sc * Da + (1 - Sa) * Dc] -->
    <enum name="mv_src_atop" value="9" />
    <!-- Multiplies the color and alpha channels of the drawable with those of
         the tint. [Sa * Da, Sc * Dc] -->
    <enum name="mv_multiply" value="14" />
    <!-- [Sa + Da - Sa * Da, Sc + Dc - Sc * Dc] -->
    <enum name="mv_screen" value="15" />
    <!-- Combines the tint and drawable color and alpha channels, clamping the
         result to valid color values. Saturate(S + D) -->
    <enum name="mv_add" value="16" />
  </attr>
  <!-- Animation to use on each child. -->
  <attr name="mv_animation" format="reference" />
  <!-- alpha property of the view, as a value between 0 (completely transparent) and 1
             (completely opaque). -->
  <attr name="mv_alpha" format="float" />
  <attr name="mv_pivotX" format="float|fraction" />
  <attr name="mv_pivotY" format="float|fraction" />
  <!-- rotation of the view, in degrees. -->
  <attr name="mv_rotation" format="float" />

  <!-- scale of the view in the x direction. -->
  <attr name="mv_scaleX" format="float" />

  <!-- scale of the view in the y direction. -->
  <attr name="mv_scaleY" format="float" />
  <!-- Makes the TextView be exactly this many pixels tall.
             You could get the same effect by specifying this number in the
             layout parameters. -->
  <attr name="mv_height" format="dimension" />
  <!-- Makes the TextView be exactly this many pixels wide.
             You could get the same effect by specifying this number in the
             layout parameters. -->
  <attr name="mv_width" format="dimension" />
  <!-- A unique name for the given item.  This must use a Java-style naming
       convention to ensure the name is unique, for example
       "com.mycompany.MyName". -->
  <attr name="mv_name" format="string" />

  <!-- ========================== -->
  <!--   VectorDrawable class   -->
  <!-- ========================== -->
  <eat-comment />

  <!-- Drawable used to draw vector paths. -->
  <declare-styleable name="VectorDrawable">
    <!-- If set, specifies the color to apply to the drawable as a tint. By default,
         no tint is applied. May be a color state list. -->
    <attr name="mv_tint" />
    <!-- When a tint color is set, specifies its Porter-Duff blending mode. The
         default value is src_in, which treats the drawable as an alpha mask. -->
    <attr name="mv_tintMode" />
    <!-- Indicates if the drawable needs to be mirrored when its layout direction is
         RTL (right-to-left). -->
    <attr name="mv_autoMirrored" format="boolean" />
    <!-- The intrinsic width of the Vector Drawable. -->
    <attr name="mv_width" />
    <!-- The intrinsic height of the Vector Drawable. -->
    <attr name="mv_height" />
    <!-- The width of the canvas the drawing is on. -->
    <attr name="mv_viewportWidth" format="float"/>
    <!-- The height of the canvas the drawing is on. -->
    <attr name="mv_viewportHeight" format="float"/>
    <!-- The name of this vector drawable -->
    <attr name="mv_name" />
    <!-- The opacity of the whole vector drawable, as a value between 0
         (completely transparent) and 1 (completely opaque). -->
    <attr name="mv_alpha" />
  </declare-styleable>

  <!-- Defines the group used in VectorDrawables. -->
  <declare-styleable name="VectorDrawableGroup">
    <!-- The name of this group -->
    <attr name="mv_name" />
    <!-- The amount to rotate the group -->
    <attr name="mv_rotation" />
    <!-- The X coordinate of the center of rotation of a group -->
    <attr name="mv_pivotX" />
    <!-- The Y coordinate of the center of rotation of a group -->
    <attr name="mv_pivotY" />
    <!-- The amount to translate the group on X coordinate -->
    <attr name="mv_translateX" format="float"/>
    <!-- The amount to translate the group on Y coordinate -->
    <attr name="mv_translateY" format="float"/>
    <!-- The amount to scale the group on X coordinate -->
    <attr name="mv_scaleX" />
    <!-- The amount to scale the group on X coordinate -->
    <attr name="mv_scaleY" />
  </declare-styleable>

  <!-- Defines the path used in VectorDrawables. -->
  <declare-styleable name="VectorDrawablePath">
    <!-- The name of this path -->
    <attr name="mv_name" />
    <!-- The width a path stroke -->
    <attr name="mv_strokeWidth" format="float" />
    <!-- The color to stroke the path if not defined implies no stroke-->
    <attr name="mv_strokeColor" format="color" />
    <!-- The opacity of a path stroke, as a value between 0 (completely transparent)
         and 1 (completely opaque) -->
    <attr name="mv_strokeAlpha" format="float" />
    <!-- The color to fill the path if not defined implies no fill-->
    <attr name="mv_fillColor" format="color" />
    <!-- The alpha of the path fill, as a value between 0 (completely transparent)
         and 1 (completely opaque)-->
    <attr name="mv_fillAlpha" format="float" />
    <!-- The specification of the operations that define the path  -->
    <attr name="mv_pathData" format="string" />
    <!-- The fraction of the path to trim from the start from 0 to 1 -->
    <attr name="mv_trimPathStart" format="float" />
    <!-- The fraction of the path to trim from the end from 0 to 1  -->
    <attr name="mv_trimPathEnd" format="float" />
    <!-- Shift trim region (allows visible region to include the start and end) from 0 to 1  -->
    <attr name="mv_trimPathOffset" format="float" />
    <!-- sets the linecap for a stroked path -->
    <attr name="mv_strokeLineCap" format="enum">
      <enum name="mv_butt" value="0"/>
      <enum name="mv_round" value="1"/>
      <enum name="mv_square" value="2"/>
    </attr>
    <!-- sets the lineJoin for a stroked path -->
    <attr name="mv_strokeLineJoin" format="enum">
      <enum name="mv_miter" value="0"/>
      <enum name="mv_round" value="1"/>
      <enum name="mv_bevel" value="2"/>
    </attr>
    <!-- sets the Miter limit for a stroked path -->
    <attr name="mv_strokeMiterLimit" format="float"/>
  </declare-styleable>

  <!-- Defines the clip path used in VectorDrawables. -->
  <declare-styleable name="VectorDrawableClipPath">
    <!-- The Name of this path -->
    <attr name="mv_name" />
    <!-- The specification of the operations that define the path  -->
    <attr name="mv_pathData"/>
  </declare-styleable>

  <!-- ========================== -->
  <!--   AnimatedVectorDrawable class   -->
  <!-- ========================== -->
  <eat-comment />

  <!-- Define the AnimatedVectorDrawable. -->
  <declare-styleable name="AnimatedVectorDrawable">
    <!-- The static vector drawable. -->
    <attr name="mv_drawable" format="reference" />
  </declare-styleable>

  <!-- Defines the target used in the AnimatedVectorDrawable. -->
  <declare-styleable name="AnimatedVectorDrawableTarget">
    <!-- The name of the target path, group or vector drawable -->
    <attr name="mv_name" />
    <!-- The animation for the target path, group or vector drawable -->
    <attr name="mv_animation" />
  </declare-styleable>
</resources>
